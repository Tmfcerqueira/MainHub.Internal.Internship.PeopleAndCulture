@page "/people"
@using Microsoft.Graph;
@using global::App.Models;
@using global::App.Repository;
@using filterMode = Radzen.FilterMode;
@using global::PeopleManagement.Api.Proxy.Client.Api;
@inject NavigationManager NavigationManager
@inject DialogService dialogService
@inject IJSRuntime JsRuntime
@inject TooltipService tooltipService
@inject GraphServiceClient graphServiceClient
@layout PrivateMainLayout
@using Microsoft.Extensions.Localization;
@inject IStringLocalizer<AbsentManagement.Resources.Resource> localizer
@attribute [Authorize(Roles = "SkillHub.Supervisor")]


<div class="container">
 
    <RadzenRow>
        
        <RadzenColumn>
            <RadzenBreadCrumb>
                <RadzenBreadCrumbItem Path="/admindashboard" Text="@localizer["AdminDashboard"]" />
                <RadzenBreadCrumbItem Path="/people" Text="@localizer["People"]" />
            </RadzenBreadCrumb>
            <RadzenTextBox Placeholder="@localizer["Searchcollaborator"]" @bind-Value="Filter"></RadzenTextBox>
            @if (_isFiltered == false)
            {
                <RadzenButton Variant="Variant.Text" Text="🔍" class="rz-text-secondary-color" Click="() => Search(Filter)"></RadzenButton>
            }
            else if (_isFiltered == true)
            {
                <RadzenButton Variant="Variant.Text" Text="❌" class="rz-text-secondary-color" Click="() => Search(Filter)"></RadzenButton>
            }
         
        </RadzenColumn>
        <RadzenColumn>
            @if (_listfilter == State.Active)
            {
                <RadzenButton Variant="Variant.Text" Text="@localizer["SeeInactive"]" class="rz-text-secondary-color" Click="() => ShowActive(State.Inactive)"></RadzenButton>
                <RadzenButton Variant="Variant.Text" Text="@localizer["SeeAll"]" class="rz-text-secondary-color" Click="() => ShowActive(State.All)"></RadzenButton>
            }
            else if (_listfilter == State.Inactive)
            {
                <RadzenButton Variant="Variant.Text" Text="@localizer["SeeActive"]" class="rz-text-secondary-color" Click="() => ShowActive(State.Active)"></RadzenButton>
                <RadzenButton Variant="Variant.Text" Text="@localizer["SeeAll"]" class="rz-text-secondary-color" Click="() => ShowActive(State.All)"></RadzenButton>
            }
            else if (_listfilter == State.All)
            {
                <RadzenButton Variant="Variant.Text" Text="@localizer["SeeActive"]" class="rz-text-secondary-color" Click="() => ShowActive(State.Active)"></RadzenButton>
                <RadzenButton Variant="Variant.Text" Text="@localizer["SeeInactive"]" class="rz-text-secondary-color" Click="() => ShowActive(State.Inactive)"></RadzenButton>
            }
        </RadzenColumn>
        <span class="info-text" style=" display: flex;align-items: center;"></span>
    </RadzenRow>




    <RadzenDataGrid AllowPaging="true"
                    LoadData="@LoadData"
                    AllowFiltering="false"
                    AllowColumnResize="true"
                    AllowAlternatingRows="false"
                    AllowSorting="false"
                    PagerHorizontalAlign="HorizontalAlign.Justify"
                    ShowPagingSummary="true"
                    Data="@_collaborators.collaborators"
                    TItem="AllPeopleModel"
                    Count="@Count"
                    PageSize="@PageSize"
                    IsLoading="@_isLoading"
                    RowDoubleClick="(args) => ShowCollaborator(args.Data.PeopleGUID)">

        <Columns>
            <RadzenDataGridColumn TItem="AllPeopleModel" Title="@localizer["Name"]" Frozen="true">
                <Template Context="collaborator">
                    <RadzenText Style="text-align:left; " TextStyle="TextStyle.Body1"><b>@(collaborator.FirstName + " " + collaborator.LastName)</b></RadzenText>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="AllPeopleModel" Title="Email">
                <Template Context="collaborator">
                    @if (string.IsNullOrEmpty(collaborator.Email))
                    {
                        <RadzenText TextStyle="TextStyle.Body2">@localizer["NoInfo"]</RadzenText>
                    }
                    else
                    {
                        <RadzenText TextStyle="TextStyle.Body2">@collaborator.Email</RadzenText>
                    }
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="AllPeopleModel" Title=@localizer["PhoneNumber"]>
                <Template Context="collaborator">
                    @if(string.IsNullOrEmpty(collaborator.Contact))
                    {
                        <RadzenText TextStyle="TextStyle.Body2">@localizer["NoInfo"]</RadzenText>
                    }
                    else
                    {
                        <RadzenText TextStyle="TextStyle.Body2">@collaborator.Contact</RadzenText>
                    }
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</div>



